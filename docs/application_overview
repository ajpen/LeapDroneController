C++ Leap Motion -> Raspberry Pi (Python client) -> Mambo Fly

The C++ application that communicates and interprets the gestures & hand positioning from the leap motion will run as the main process/program. It will assume that the client is always running on the raspberry pi.

Workflow:

Start
1. Read configurations from file
2. Use the read configurations to initialize the Leap interface.
3. Test that connection to the Leap was successful.
4. Initialize the parrot client interface with the configurations by creating the object.
5. Attempt to establish connection to the client on the pi.
6. Test that the connection was successfully established

NOTE: the following steps behave as such due to the nature of the parrot interface.
7. Listen for takeoff gesture.
	a. If takeoff gesture is detected:
		i.   Send takeoff command to client. if unable to send, response timed out, or takeoff failed then print diagnostic message, else print successful takeoff on successful response.

		IN FLIGHT

		ii. While not idle (No valid movement detected by leap), send fly commands based on pitch, yaw and whatever else.
		iii.  If idle, signal a safe land and report it to the user.
		iv.   If circle gesture detected, send barrel roll command in the direction of the circle.


NOTE: After a safeland, user must initiate a takeoff gesture once again


